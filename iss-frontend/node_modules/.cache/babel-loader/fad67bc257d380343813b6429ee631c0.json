{"ast":null,"code":"var _jsxFileName = \"/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/components/MainPage.js\";\nimport React, { Component } from 'react';\nimport * as fetchImagesActions from '../actions/FetchImagesActions';\nimport { bindActionCreators } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const {\n      getImagesFromDbAction\n    } = this.props;\n    getImagesFromDbAction();\n  }\n\n  render() {\n    const images = this.props.images;\n    var uploadedImage = this.props.response;\n\n    if (newPost) {\n      posts.unshift(newPost);\n    }\n\n    if (!posts || posts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        classname: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(NewPostButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nothing has been posted yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    }\n\n    var newLike = this.props.newLike;\n\n    if (newLike) {\n      posts.map(post => {\n        if (post._id === newLike.postId) {\n          post.likes = newLike.likes;\n        }\n      });\n    }\n\n    let postItem;\n\n    if (posts) {\n      postItem = /*#__PURE__*/_jsxDEV(\"div\", {\n        classname: \"card-columns\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: posts.map(post => {\n              var picturePath = \"../../images/posts/\" + post.image;\n              var authorname = post.author;\n              var authorPicture = post.authorpic;\n              var authorPicturePath = \"../../images/user/defUserWidget.png\";\n\n              if (!(authorPicture === undefined)) {\n                authorPicturePath = \"../../images/user/\" + authorPicture;\n              }\n\n              return /*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                md: 6,\n                lg: 3,\n                className: \"card-columns\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"single-card\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      style: {\n                        float: 'left',\n                        margin: 0\n                      },\n                      className: \"post-title\",\n                      children: [/*#__PURE__*/_jsxDEV(Image, {\n                        src: authorPicturePath,\n                        style: {\n                          margin: 4\n                        },\n                        roundedCircle: true,\n                        width: \"35\",\n                        height: \"35\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 68,\n                        columnNumber: 45\n                      }, this), authorname]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      style: {\n                        float: 'left'\n                      },\n                      children: [\"Posted on \", post.createdAt]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(Image, {\n                      src: picturePath,\n                      width: \"100%\",\n                      height: \"100%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          float: 'left'\n                        },\n                        children: post.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                    children: /*#__PURE__*/_jsxDEV(Container, {\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          children: [/*#__PURE__*/_jsxDEV(Image, {\n                            src: \"../../images/icons/favourite_Icon.png\",\n                            width: \"20\",\n                            height: \"20\",\n                            onClick: () => this.handleLikes(post._id)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 92,\n                            columnNumber: 53\n                          }, this), post.likes]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 91,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          children: /*#__PURE__*/_jsxDEV(CommentIcon, {\n                            dataFromParent: post._id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 96,\n                            columnNumber: 53\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }, this);\n    } else {\n      postItem = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts could be found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NewPostButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), postItem]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getImagesFromDbAction: fetchImagesActions.getImagesFromDb\n}, dispatch);\n\nconst connectedMainPage = connect(mapStateToProps, mapDispatchToProps)(MainPage);\nexport default connectedMainPage;","map":{"version":3,"sources":["/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/components/MainPage.js"],"names":["React","Component","fetchImagesActions","bindActionCreators","mapStateToProps","state","MainPage","constructor","props","componentDidMount","getImagesFromDbAction","render","images","uploadedImage","response","newPost","posts","unshift","length","newLike","map","post","_id","postId","likes","postItem","picturePath","image","authorname","author","authorPicture","authorpic","authorPicturePath","undefined","float","margin","createdAt","description","handleLikes","mapDispatchToProps","dispatch","getImagesFromDb","connectedMainPage","connect"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport * as fetchImagesActions from '../actions/FetchImagesActions'\nimport { bindActionCreators } from \"redux\";\n\nconst mapStateToProps = state => {\n    return state;\n}\n\nclass MainPage extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount() {\n        const {getImagesFromDbAction} = this.props;\n        getImagesFromDbAction();\n    }\n\n    render() {\n        const images = this.props.images\n        var uploadedImage = this.props.response\n        if(newPost){\n            posts.unshift(newPost)\n        }\n        if(!posts || posts.length === 0){ \n            return(\n                <div classname=\"dashboard\">\n                    <NewPostButton/>\n                    <p>Nothing has been posted yet.</p>\n                </div>\n            )   \n        }\n\n        var newLike = this.props.newLike;\n        if(newLike){\n            posts.map(post => {  \n                if(post._id === newLike.postId) { \n                    post.likes = newLike.likes;\n                }\n            })\n            \n        }\n\n        let postItem\n        if(posts){\n            postItem = <div classname=\"card-columns\">\n                <Container>\n                <Row>\n                {   \n                    \n                    posts.map(post => {\n                        var picturePath = \"../../images/posts/\" + post.image;\n                        var authorname = post.author;\n                        var authorPicture = post.authorpic;\n                        var authorPicturePath = \"../../images/user/defUserWidget.png\"\n\n                        if(!(authorPicture === undefined)) {\n                            authorPicturePath = \"../../images/user/\" + authorPicture;\n                        } \n\n                        return(\n                            <Col xs={8} md={6} lg={3} className=\"card-columns\">\n                                <Card className=\"single-card\">\n                                    <Card.Header>\n                                        <Card.Title style={{float: 'left', margin:0}} className=\"post-title\">\n                                            <Image src={authorPicturePath} style={{margin:4}} roundedCircle width=\"35\" height=\"35\"/>\n                                            {authorname}\n                                        </Card.Title>\n                                        <br/>\n                                        <br/>\n                                        <small style={{float: 'left'}}>\n                                            Posted on {post.createdAt}\n                                        </small>\n                                    </Card.Header>\n                                    <Card.Body className=\"card-body\">\n                                       \n                                        <Image src={picturePath} width=\"100%\" height=\"100%\"/>\n                                        \n                                        <Card.Text>\n                                            <div style={{float: 'left'}}>\n                                                {post.description}\n                                            </div>   \n                                        </Card.Text>\n                                        <br/>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <Container>\n                                            <Row>\n                                                <Col>\n                                                    <Image src=\"../../images/icons/favourite_Icon.png\" width=\"20\" height=\"20\" onClick={() => this.handleLikes(post._id)}/>\n                                                    {post.likes}\n                                                </Col>\n                                                <Col>\n                                                    <CommentIcon dataFromParent={post._id}/>\n                                                </Col>\n                                            </Row>\n                                        </Container>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n            </Container>\n            </div>\n        } else {\n            postItem = <p>No posts could be found.</p>\n        }\n        return(\n            <div>\n                <NewPostButton/>\n                {postItem}\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getImagesFromDbAction: fetchImagesActions.getImagesFromDb,\n},dispatch)\n\nconst connectedMainPage = connect(mapStateToProps, mapDispatchToProps) (MainPage);\nexport default connectedMainPage;"]},"metadata":{},"sourceType":"module"}