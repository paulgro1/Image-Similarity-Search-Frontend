{"ast":null,"code":"var _jsxFileName = \"/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/components/ImageUploadButton.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as imageUploadActions from '../actions/ImageUploadActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nclass ImageUploadButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: {}\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleShow(e) {\n    e.preventDefault();\n    const {\n      showImageUploadDialogAction\n    } = this.props;\n    showImageUploadDialogAction();\n  }\n\n  handleClose() {\n    const {\n      hideImageUploadDialogAction\n    } = this.props;\n    hideImageUploadDialogAction();\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      file\n    } = this.state;\n    const {\n      imageUploadAction\n    } = this.props;\n    console.log(\"handleSubmit image from form: \" + file.name);\n    const formData = new FormData();\n    formData.append(\"img\", file, file.name);\n    imageUploadAction(this.props.token, formData);\n  }\n  /*\n  * Note: I guess you could upload multiple files by removing [0] (?)\n  */\n\n\n  handleSelect(e) {\n    this.setState({\n      file: e.target.files[0]\n    }, () => {\n      console.log(\"[ImageUploadButton] Files in state: \" + this.state.file);\n    });\n  }\n\n  render() {\n    var showDialog = this.props.showImageUploadDialog;\n\n    if (showDialog === undefined) {\n      showDialog = false;\n    }\n\n    var pending = this.props.pending;\n\n    if (pending === undefined) {\n      pending = false;\n    }\n\n    var error = this.props.error;\n\n    if (error === undefined) {\n      error = false;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: this.handleShow,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showDialog,\n        onHide: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Image Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: this.handleSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: this.handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                color: \"red\"\n              },\n              children: \" Something went wrong. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 39\n            }, this), pending && /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"grey\"\n              },\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  showImageUploadDialogAction: imageUploadActions.getShowImageUploadDialogAction,\n  hideImageUploadDialogAction: imageUploadActions.getHideImageUploadDialogAction,\n  imageUploadAction: imageUploadActions.imageUpload\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUploadButton);","map":{"version":3,"sources":["/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/components/ImageUploadButton.js"],"names":["React","Component","Button","Modal","Form","Spinner","connect","bindActionCreators","imageUploadActions","mapStateToProps","state","ImageUploadButton","constructor","props","file","handleShow","bind","handleClose","handleSubmit","handleSelect","e","preventDefault","showImageUploadDialogAction","hideImageUploadDialogAction","imageUploadAction","console","log","name","formData","FormData","append","token","setState","target","files","render","showDialog","showImageUploadDialog","undefined","pending","error","color","mapDispatchToProps","dispatch","getShowImageUploadDialogAction","getHideImageUploadDialogAction","imageUpload"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,+BAApC;;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAOA,KAAP;AACH,CAFD;;AAIA,MAAMC,iBAAN,SAAgCV,SAAhC,CAA0C;AAEtCW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKH,KAAL,GAAa;AACTI,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,UAAU,CAACK,CAAD,EAAG;AACTA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAACC,MAAAA;AAAD,QAAgC,KAAKT,KAA3C;AACAS,IAAAA,2BAA2B;AAC9B;;AAEDL,EAAAA,WAAW,GAAE;AACT,UAAM;AAACM,MAAAA;AAAD,QAAgC,KAAKV,KAA3C;AACAU,IAAAA,2BAA2B;AAC9B;;AAEDL,EAAAA,YAAY,CAACE,CAAD,EAAG;AACXA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAACP,MAAAA;AAAD,QAAS,KAAKJ,KAApB;AACA,UAAM;AAACc,MAAAA;AAAD,QAAsB,KAAKX,KAAjC;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCZ,IAAI,CAACa,IAApD;AAEA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBhB,IAAvB,EAA6BA,IAAI,CAACa,IAAlC;AAEAH,IAAAA,iBAAiB,CAAC,KAAKX,KAAL,CAAWkB,KAAZ,EAAmBH,QAAnB,CAAjB;AACH;AAED;AACJ;AACA;;;AACIT,EAAAA,YAAY,CAACC,CAAD,EAAG;AACX,SAAKY,QAAL,CAAc;AAAClB,MAAAA,IAAI,EAAEM,CAAC,CAACa,MAAF,CAASC,KAAT,CAAe,CAAf;AAAP,KAAd,EAAyC,MAAM;AAC3CT,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAyC,KAAKhB,KAAL,CAAWI,IAAhE;AACH,KAFD;AAGH;;AAEDqB,EAAAA,MAAM,GAAE;AAEJ,QAAIC,UAAU,GAAG,KAAKvB,KAAL,CAAWwB,qBAA5B;;AACA,QAAGD,UAAU,KAAKE,SAAlB,EAA4B;AACxBF,MAAAA,UAAU,GAAG,KAAb;AACH;;AAED,QAAIG,OAAO,GAAG,KAAK1B,KAAL,CAAW0B,OAAzB;;AACA,QAAGA,OAAO,KAAKD,SAAf,EAAyB;AACrBC,MAAAA,OAAO,GAAG,KAAV;AACH;;AAED,QAAIC,KAAK,GAAG,KAAK3B,KAAL,CAAW2B,KAAvB;;AACA,QAAGA,KAAK,KAAKF,SAAb,EAAuB;AACnBE,MAAAA,KAAK,GAAG,KAAR;AACH;;AAED,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,iBAAhB;AAAkC,QAAA,OAAO,EAAE,KAAKzB,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEqB,UAAb;AAAyB,QAAA,MAAM,EAAE,KAAKnB,WAAtC;AAAA,gCACI,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,iCACI,QAAC,IAAD;AAAA,oCACI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,QAAQ,EAAE,KAAKE;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAE,KAAKD,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAKKsB,KAAK,iBAAI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALd,EAMKF,OAAO,iBAAI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,QAAnB;AAA4B,cAAA,KAAK,EAAE;AAACE,gBAAAA,KAAK,EAAE;AAAR,eAAnC;AAAoD,cAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,oBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAcI,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH;;AAvFqC;;AA0F1C,MAAMC,kBAAkB,GAAGC,QAAQ,IAAIpC,kBAAkB,CAAC;AACtDe,EAAAA,2BAA2B,EAAEd,kBAAkB,CAACoC,8BADM;AAEtDrB,EAAAA,2BAA2B,EAAEf,kBAAkB,CAACqC,8BAFM;AAGtDrB,EAAAA,iBAAiB,EAAEhB,kBAAkB,CAACsC;AAHgB,CAAD,EAIvDH,QAJuD,CAAzD;;AAMA,eAAerC,OAAO,CAACG,eAAD,EAAkBiC,kBAAlB,CAAP,CAA6C/B,iBAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as imageUploadActions from '../actions/ImageUploadActions';\n\n\nconst mapStateToProps = state => {\n    return state\n}\n\nclass ImageUploadButton extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            file: {}\n        };\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n\n    handleShow(e){\n        e.preventDefault();\n        const {showImageUploadDialogAction} = this.props;\n        showImageUploadDialogAction();\n    }\n\n    handleClose(){\n        const {hideImageUploadDialogAction} = this.props;\n        hideImageUploadDialogAction();\n    } \n\n    handleSubmit(e){\n        e.preventDefault();\n        const {file} = this.state;\n        const {imageUploadAction} = this.props;\n        console.log(\"handleSubmit image from form: \" + file.name);\n\n        const formData = new FormData();\n        formData.append(\"img\", file, file.name);\n\n        imageUploadAction(this.props.token, formData);\n    }\n\n    /*\n    * Note: I guess you could upload multiple files by removing [0] (?)\n    */\n    handleSelect(e){\n        this.setState({file: e.target.files[0]}, () => {\n            console.log(\"[ImageUploadButton] Files in state: \" + this.state.file);\n        })\n    }\n\n    render(){\n\n        var showDialog = this.props.showImageUploadDialog\n        if(showDialog === undefined){\n            showDialog = false;\n        }\n\n        var pending = this.props.pending;\n        if(pending === undefined){\n            pending = false;\n        }\n\n        var error = this.props.error;\n        if(error === undefined){\n            error = false;\n        }\n\n        return (\n            <div>\n                <Button variant=\"outline-success\" onClick={this.handleShow}> \n                    Upload Image \n                </Button>\n\n                <Modal show={showDialog} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Image Upload</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <input type='file' onChange={this.handleSelect}/>\n                            <Button variant=\"primary\" onClick={this.handleSubmit}>\n                                Submit\n                            </Button>\n                            {error && <Form.Label style={{color: \"red\"}}> Something went wrong. </Form.Label>}\n                            {pending && <Spinner animation=\"border\" style={{color: \"grey\"}} size=\"sm\"/>}\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    showImageUploadDialogAction: imageUploadActions.getShowImageUploadDialogAction,\n    hideImageUploadDialogAction: imageUploadActions.getHideImageUploadDialogAction,\n    imageUploadAction: imageUploadActions.imageUpload\n},dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUploadButton)\n"]},"metadata":{},"sourceType":"module"}