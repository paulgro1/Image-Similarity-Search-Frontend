{"ast":null,"code":"var _jsxFileName = \"/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/components/MainPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../layout/css/style.css';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport * as fetchImagesActions from '../actions/FetchImagesActions';\nimport { bindActionCreators } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n  } // ZUM TESTEN AUKOMMENTIERT\n\n  /* componentDidMount() {\n      const {getImagesFromDbAction} = this.props;\n      getImagesFromDbAction();\n  } */\n\n\n  render() {\n    var images = this.props.images; //Note: \"response\" enthält ein Bild, falls eins vom User hochgeladen wurde\n\n    var uploadedImage = this.props.response;\n\n    if (uploadedImage) {//TODO: etwas mit dem hochgeladenen Bild tun\n    } // ZUM TESTEN AUKOMMENTIERT\n\n    /* if(!images || images.length === 0){ \n        return(\n            <div classname=\"mainPage\">\n                <p>No images found.</p>\n            </div>\n        )   \n    } */\n\n\n    let imageItem; // NUR FÜR TESTZWECKE:\n\n    images = [{\n      url: \"../../testImages/1.jpg\"\n    }, {\n      url: \"../../testImages/2.jpeg\"\n    }, {\n      url: \"../../testImages/3.jpeg\"\n    }];\n\n    if (images) {\n      imageItem = /*#__PURE__*/_jsxDEV(\"div\", {\n        classname: \"card-columns\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: images.map(image => {\n              // var imagePath = \"../../images/posts/\" + image.url;\n              var imagePath = image.url;\n              return /*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                md: 6,\n                lg: 3,\n                className: \"card-columns\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"single-card\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Header, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    className: \"card-body\",\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: imagePath,\n                      width: \"100%\",\n                      height: \"100%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this);\n    } else {\n      imageItem = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images could be found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imageItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getImagesFromDbAction: fetchImagesActions.getImagesFromDb\n}, dispatch);\n\nconst connectedMainPage = connect(mapStateToProps, mapDispatchToProps)(MainPage);\nexport default connectedMainPage;","map":{"version":3,"sources":["/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/components/MainPage.js"],"names":["React","Component","connect","Col","Row","Container","Card","Image","fetchImagesActions","bindActionCreators","mapStateToProps","state","MainPage","constructor","props","render","images","uploadedImage","response","imageItem","url","map","image","imagePath","mapDispatchToProps","dispatch","getImagesFromDbAction","getImagesFromDb","connectedMainPage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../layout/css/style.css'\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container'\n\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport * as fetchImagesActions from '../actions/FetchImagesActions'\nimport { bindActionCreators } from \"redux\";\n\nconst mapStateToProps = state => {\n    return state;\n}\n\nclass MainPage extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    // ZUM TESTEN AUKOMMENTIERT\n    /* componentDidMount() {\n        const {getImagesFromDbAction} = this.props;\n        getImagesFromDbAction();\n    } */\n\n    render() {\n        var images = this.props.images\n        //Note: \"response\" enthält ein Bild, falls eins vom User hochgeladen wurde\n        var uploadedImage = this.props.response\n        if(uploadedImage){\n            //TODO: etwas mit dem hochgeladenen Bild tun\n        }\n\n        // ZUM TESTEN AUKOMMENTIERT\n        /* if(!images || images.length === 0){ \n            return(\n                <div classname=\"mainPage\">\n                    <p>No images found.</p>\n                </div>\n            )   \n        } */\n\n        let imageItem\n        \n        // NUR FÜR TESTZWECKE:\n        images = [{url: \"../../testImages/1.jpg\"},{url: \"../../testImages/2.jpeg\"},{url: \"../../testImages/3.jpeg\"}]\n\n        if(images){\n            imageItem = <div classname=\"card-columns\">\n                <Container>\n                <Row>\n                {   \n                    images.map(image => {\n                        // var imagePath = \"../../images/posts/\" + image.url;\n                        var imagePath = image.url\n                        return(\n                            <Col xs={8} md={6} lg={3} className=\"card-columns\">\n                                <Card className=\"single-card\">\n                                    <Card.Header>\n                                    </Card.Header>\n                                    <Card.Body className=\"card-body\">\n                                        <Image src={imagePath} width=\"100%\" height=\"100%\"/>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n            </Container>\n            </div>\n        } else {\n            imageItem = <p>No images could be found.</p>\n        }\n        return(\n            <div>\n                {imageItem}\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getImagesFromDbAction: fetchImagesActions.getImagesFromDb,\n},dispatch)\n\nconst connectedMainPage = connect(mapStateToProps, mapDispatchToProps) (MainPage);\nexport default connectedMainPage;"]},"metadata":{},"sourceType":"module"}