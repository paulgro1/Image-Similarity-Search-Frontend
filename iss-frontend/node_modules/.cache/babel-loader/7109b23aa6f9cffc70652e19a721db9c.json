{"ast":null,"code":"var _jsxFileName = \"/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/components/MainPage.js\";\nimport React, { Component } from 'react';\nimport * as fetchImagesActions from '../actions/FetchImagesActions';\nimport { bindActionCreators } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const {\n      getImagesFromDbAction\n    } = this.props;\n    getImagesFromDbAction();\n  }\n\n  render() {\n    const images = this.props.images; //Note: \"response\" enthält ein Bild, falls eins vom User hochgeladen wurde\n\n    var uploadedImage = this.props.response;\n\n    if (uploadedImage) {//TODO: etwas mit dem hochgeladenen Bild tun\n    }\n\n    if (!images || images.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        classname: \"mainPage\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No images found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    }\n\n    let imageItem;\n\n    if (images) {\n      imageItem = /*#__PURE__*/_jsxDEV(\"div\", {\n        classname: \"card-columns\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: images.map(image => {\n              var imagePath = \"../../images/posts/\" + image.url;\n              return /*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                md: 6,\n                lg: 3,\n                className: \"card-columns\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"single-card\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Header, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    className: \"card-body\",\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: imagePath,\n                      width: \"100%\",\n                      height: \"100%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this);\n    } else {\n      imageItem = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images could be found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NewPostButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), postItem]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getImagesFromDbAction: fetchImagesActions.getImagesFromDb\n}, dispatch);\n\nconst connectedMainPage = connect(mapStateToProps, mapDispatchToProps)(MainPage);\nexport default connectedMainPage;","map":{"version":3,"sources":["/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/components/MainPage.js"],"names":["React","Component","fetchImagesActions","bindActionCreators","mapStateToProps","state","MainPage","constructor","props","componentDidMount","getImagesFromDbAction","render","images","uploadedImage","response","length","imageItem","map","image","imagePath","url","postItem","mapDispatchToProps","dispatch","getImagesFromDb","connectedMainPage","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,KAAKC,kBAAZ,MAAoC,+BAApC;AACA,SAASC,kBAAT,QAAmC,OAAnC;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAOA,KAAP;AACH,CAFD;;AAIA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE7BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA;AAAD,QAA0B,KAAKF,KAArC;AACAE,IAAAA,qBAAqB;AACxB;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,KAAKJ,KAAL,CAAWI,MAA1B,CADK,CAEL;;AACA,QAAIC,aAAa,GAAG,KAAKL,KAAL,CAAWM,QAA/B;;AACA,QAAGD,aAAH,EAAiB,CACb;AACH;;AACD,QAAG,CAACD,MAAD,IAAWA,MAAM,CAACG,MAAP,KAAkB,CAAhC,EAAkC;AAC9B,0BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAED,QAAIC,SAAJ;;AACA,QAAGJ,MAAH,EAAU;AACNI,MAAAA,SAAS,gBAAG;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACR,QAAC,SAAD;AAAA,iCACA,QAAC,GAAD;AAAA,sBAEIJ,MAAM,CAACK,GAAP,CAAWC,KAAK,IAAI;AAChB,kBAAIC,SAAS,GAAG,wBAAwBD,KAAK,CAACE,GAA9C;AACA,kCACI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAY,gBAAA,EAAE,EAAE,CAAhB;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAA0B,gBAAA,SAAS,EAAC,cAApC;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,SAAS,EAAC,aAAhB;AAAA,0CACI,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA,0BADJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC,WAArB;AAAA,2CACI,QAAC,KAAD;AAAO,sBAAA,GAAG,EAAED,SAAZ;AAAuB,sBAAA,KAAK,EAAC,MAA7B;AAAoC,sBAAA,MAAM,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAMI,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ;AAaH,aAfD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,cAAZ;AAwBH,KAzBD,MAyBO;AACHH,MAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ;AACH;;AACD,wBACI;AAAA,8BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKK,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA7D4B;;AA+DjC,MAAMC,kBAAkB,GAAGC,QAAQ,IAAIpB,kBAAkB,CAAC;AACtDO,EAAAA,qBAAqB,EAAER,kBAAkB,CAACsB;AADY,CAAD,EAEvDD,QAFuD,CAAzD;;AAIA,MAAME,iBAAiB,GAAGC,OAAO,CAACtB,eAAD,EAAkBkB,kBAAlB,CAAP,CAA8ChB,QAA9C,CAA1B;AACA,eAAemB,iBAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport * as fetchImagesActions from '../actions/FetchImagesActions'\nimport { bindActionCreators } from \"redux\";\n\nconst mapStateToProps = state => {\n    return state;\n}\n\nclass MainPage extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount() {\n        const {getImagesFromDbAction} = this.props;\n        getImagesFromDbAction();\n    }\n\n    render() {\n        const images = this.props.images\n        //Note: \"response\" enthält ein Bild, falls eins vom User hochgeladen wurde\n        var uploadedImage = this.props.response\n        if(uploadedImage){\n            //TODO: etwas mit dem hochgeladenen Bild tun\n        }\n        if(!images || images.length === 0){ \n            return(\n                <div classname=\"mainPage\">\n                    <p>No images found.</p>\n                </div>\n            )   \n        }\n\n        let imageItem\n        if(images){\n            imageItem = <div classname=\"card-columns\">\n                <Container>\n                <Row>\n                {   \n                    images.map(image => {\n                        var imagePath = \"../../images/posts/\" + image.url;\n                        return(\n                            <Col xs={8} md={6} lg={3} className=\"card-columns\">\n                                <Card className=\"single-card\">\n                                    <Card.Header>\n                                    </Card.Header>\n                                    <Card.Body className=\"card-body\">\n                                        <Image src={imagePath} width=\"100%\" height=\"100%\"/>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n            </Container>\n            </div>\n        } else {\n            imageItem = <p>No images could be found.</p>\n        }\n        return(\n            <div>\n                <NewPostButton/>\n                {postItem}\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getImagesFromDbAction: fetchImagesActions.getImagesFromDb,\n},dispatch)\n\nconst connectedMainPage = connect(mapStateToProps, mapDispatchToProps) (MainPage);\nexport default connectedMainPage;"]},"metadata":{},"sourceType":"module"}