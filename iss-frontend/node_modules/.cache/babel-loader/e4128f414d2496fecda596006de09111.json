{"ast":null,"code":"import * as imageUploadActions from '../actions/ImageUploadActions';\nconst initialState = {\n  images: [],\n  uploadPending: false,\n  showImageUploadDialog: false\n};\n/**\n * @param state - default: the initial state of the application\n * @param action - an action given to the store\n * \n * Everytime the rootReducer is called, redux passes the current state\n * and the action that was send to the store to the rootReducer.\n */\n\nfunction rootReducer(state = initialState, action) {\n  console.log(\"Action in Reducer: \" + action.type);\n\n  switch (action.type) {\n    case imageUploadActions.SHOW_IMAGE_UPLOAD_DIALOG:\n      return { ...state,\n        showImageUploadDialog: true,\n        error: null\n      };\n\n    case imageUploadActions.HIDE_IMAGE_UPLOAD_DIALOG:\n      return { ...state,\n        showImageUploadDialog: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default rootReducer;","map":{"version":3,"sources":["/Users/anne/Documents/Studium/Beuth_MI/Semester 5/Projekt/iss-frontend/src/reducer/RootReducer.js"],"names":["imageUploadActions","initialState","images","uploadPending","showImageUploadDialog","rootReducer","state","action","console","log","type","SHOW_IMAGE_UPLOAD_DIALOG","error","HIDE_IMAGE_UPLOAD_DIALOG"],"mappings":"AAAA,OAAO,KAAKA,kBAAZ,MAAoC,+BAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,aAAa,EAAE,KAFE;AAGjBC,EAAAA,qBAAqB,EAAE;AAHN,CAArB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAACL,YAA3B,EAAyCM,MAAzC,EAAiD;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBF,MAAM,CAACG,IAA3C;;AAEA,UAAOH,MAAM,CAACG,IAAd;AACI,SAAKV,kBAAkB,CAACW,wBAAxB;AACI,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,qBAAqB,EAAE,IAFpB;AAGHQ,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKZ,kBAAkB,CAACa,wBAAxB;AACI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,qBAAqB,EAAE,KAFpB;AAGHQ,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ;AACI,aAAON,KAAP;AAdR;AAgBH;;AAAA;AAED,eAAeD,WAAf","sourcesContent":["import * as imageUploadActions from '../actions/ImageUploadActions';\n\nconst initialState = {\n    images: [],\n    uploadPending: false,\n    showImageUploadDialog: false\n};\n\n/**\n * @param state - default: the initial state of the application\n * @param action - an action given to the store\n * \n * Everytime the rootReducer is called, redux passes the current state\n * and the action that was send to the store to the rootReducer.\n */\n\nfunction rootReducer(state=initialState, action) {\n    console.log(\"Action in Reducer: \" + action.type);\n\n    switch(action.type){\n        case imageUploadActions.SHOW_IMAGE_UPLOAD_DIALOG:\n            return {\n                ...state,\n                showImageUploadDialog: true,\n                error: null\n            }\n        case imageUploadActions.HIDE_IMAGE_UPLOAD_DIALOG:\n            return {\n                ...state,\n                showImageUploadDialog: false,\n                error: null\n            }\n        default:\n            return state\n    }\n};\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}